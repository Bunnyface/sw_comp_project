services:
  angular:
    image: swcomp/angular
    build: ./angular
    hostname: angular
    ports:
      - 80:80
    volumes:
      - ./angular/angular_dev/hello-world-angular:/usr/share/nginx/html:Z
    networks:
      - sw_network
    depends_on:
      - "scala"

  scala:
    image: swcomp/scala
    build: ./scala
    hostname: scala
    ports:
      - 8081:8081
    environment:
      - PSQLHOST=postgres:5432
    networks:
      - sw_network
    depends_on:
      - "postgres"

  postgres:
    image: swcomp/postgres
    build: ./postgres
    hostname: postgres
    environment:
      POSTGRES_USER: scalauser
      POSTGRES_PASSWORD: example
      POSTGRES_DB: defaultdb
    networks:
      - sw_network


  mysql:
    image: mysql:5.7.29
    ports:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: wso2carbon
      MYSQL_PASSWORD: wso2carbon
    volumes:
      - ./wso2/docker-is-5.11.0/docker-compose/is/conf/mysql/scripts:/docker-entrypoint-initdb.d
      - ./wso2/docker-is-5.11.0/docker-compose/is/conf/mysql/conf/my.cnf:/etc/mysql/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-proot"]
      interval: 30s
      timeout: 60s
      retries: 5

  identity-server:
    build: ./wso2/docker-is-5.11.0/docker-compose/is/dockerfiles/is
    ports:
      - "9763:9763"
      - "9443:9443"
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:9443/carbon/admin/login.jsp"]
      interval: 5s
      timeout: 120s
      start_period: 100s
    volumes:
      - ./wso2/docker-is-5.11.0/docker-compose/is/conf/identity-server:/home/wso2carbon/wso2-config-volume
      - ./wso2/mountDirectories/database:/home/wso2carbon/wso2is-5.11.0/repository/database
    depends_on:
      mysql:
        condition: service_healthy


networks:
  sw_network:
    driver: bridge
    name: sw_network
