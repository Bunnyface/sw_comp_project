{"version":3,"sources":["./src/app/insert-comp-to-mod/insert-comp-to-mod.component.ts","./src/app/insert-comp-to-mod/insert-comp-to-mod.component.html","./src/app/insert-file/insert-file.component.html","./src/app/insert-file/insert-file.component.ts","./src/app/insert-module/insert-module.component.ts","./src/app/insert-module/insert-module.component.html","./src/app/releases/releases.component.ts","./src/app/releases/releases.component.html","./src/environments/environment.ts","./src/app/release-detail/release-detail.component.ts","./src/app/release-detail/release-detail.component.html","./src/app/compare/compare.component.ts","./src/app/compare/compare.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/log/log.component.html","./src/app/log/log.component.ts","./src/app/app.module.ts","./src/app/logger.service.ts","./src/app/insert-component/insert-component.component.ts","./src/app/insert-component/insert-component.component.html","./src/app/data-input/data-input.component.ts","./src/app/data-input/data-input.component.html","./src/app/comps/comps.component.ts","./src/app/comps/comps.component.html","./src/app/app-routing.module.ts","./src/app/config.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\nimport { LoggerService } from '../logger.service';\nimport { SwCompManagerComponent } from '../shared/component.model';\n\n@Component({\n  selector: 'app-insert-comp-to-mod',\n  templateUrl: './insert-comp-to-mod.component.html',\n  styleUrls: ['./insert-comp-to-mod.component.css']\n})\nexport class InsertCompToModComponent implements OnInit {\n\n  message: string;\n  @Input() modulename;\n  components: Array<SwCompManagerComponent>;\n\n  options: FormGroup;\n  newComponent = new FormGroup({\n    componentname: new FormControl(''),\n    usage_type: new FormControl(''),\n    attr_value1: new FormControl(''),\n    attr_value2: new FormControl(''),\n    attr_value3: new FormControl(''),\n    date: new FormControl(''),\n    comment_one: new FormControl(''),\n    comment_two: new FormControl('')\n  });\n\n  getComponents(): void {\n    this.configService.getComponents().subscribe(res => this.components = res);\n  }\n\n  onSubmit() {\n    this.addComponent(this.newComponent.value);\n    this.newComponent.reset();\n  }\n\n  // Add selected component to module\n  addComponent(body) {\n    const path = \"insertComponentToModule\";\n    body.modulename = this.modulename;\n    this.configService.insertCompToMod(path, body).subscribe(res => {\n      this.message = this.loggerService.messages[this.loggerService.messages.length -1]\n    });\n  }\n\n  constructor(private configService: ConfigService, fb: FormBuilder, private loggerService: LoggerService) { \n    this.options = fb.group({\n      subComponent: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  ngOnInit(): void {\n    this.getComponents();\n  }\n\n}\n","<div *ngIf=\"message\">{{message}}</div>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"newComponent\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field>\n                <select matNativeControl placeholder=\"Component\" formControlName=\"componentname\" required>\n                    <option *ngFor=\"let component of components\" value=\"{{component.name}}\">{{component.name}} {{component.version}}</option>\n                </select>\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Usage type\" type=\"text\" formControlName=\"usage_type\" id=\"usageType\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Attribute value 1\" type=\"text\" formControlName=\"attr_value1\" id=\"attr_value1\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Attribute value 2\" type=\"text\" formControlName=\"attr_value2\" id=\"attr_value2\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Attribute value 3\" type=\"text\" formControlName=\"attr_value3\" id=\"attr_value3\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Date\" type=\"date\" formControlName=\"date\" id=\"date\" required />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Comment 1\" type=\"text\" formControlName=\"comment_one\" id=\"CommentOne\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Comment 2\" type=\"text\" formControlName=\"comment_two\" id=\"CommentTwo\" />\n            </mat-form-field>\n            <button type=\"submit\" [disabled]=\"!newComponent.valid\" mat-button color=\"primary\">Submit</button>\n        </form>\n    </div>\n</div>","<div>\n    <h1 class=\"mat-display-3\">Insert data</h1>\n</div>\n\n<input type=\"file\" class=\"file-input\" accept=\".json\" (change)=\"onFileSelected($event)\" #fileUpload>\n<mat-card>\n    <div class=\"file-upload\">\n        <mat-list>\n            <mat-list-item class=\"row\">\n                <span>{{fileName || \"No file selected yet.\"}}</span>\n                <button mat-button color=\"warn\" *ngIf=\"fileName != ''\" (click)=\"onDelete()\">Delete</button>\n            </mat-list-item>\n        </mat-list>\n\n        <div class=\"button-group\">\n            <button class=\"col-md-2\" mat-stroked-button color=\"primary\" (click)=\"fileUpload.click()\">Browse files</button>\n            <button class=\"col-md-4\" mat-raised-button color=\"primary\" *ngIf=\"!(fileName == '')\" (click)=\"onSubmit()\">Upload selected</button>\n            <button class=\"col-md-4\" mat-raised-button disabled *ngIf=\"(fileName == '')\">Upload selected</button>\n        </div>\n    </div>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-insert-file',\n  templateUrl: './insert-file.component.html',\n  styleUrls: ['./insert-file.component.css']\n})\nexport class InsertFileComponent implements OnInit {\n\n  fileName = \"\";\n  body = {};\n\n  // Read file contents\n  onFileSelected(event): void {\n    const file: File = event.target.files[0];\n    if (file) {\n      this.fileName = file.name;\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        this.body = JSON.parse(event.target.result as string);\n      }\n      reader.readAsText(file);\n    }\n  }\n\n  // Delete selected file before uploading\n  onDelete(): void {\n    this.fileName = \"\";\n    this.body = {};\n  }\n\n  // Submit selected file\n  onSubmit(): void {\n    this.addData(this.body);\n  }\n\n  addData(body) {\n    const path = \"insertMany\";\n    this.configService.insertFile(path, body, this.fileName).subscribe(res => {\n      console.log(res);\n      this.onDelete();\n    });\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { ConfigService } from '../config.service';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-insert-module',\n  templateUrl: './insert-module.component.html',\n  styleUrls: ['./insert-module.component.css']\n})\nexport class InsertModuleComponent implements OnInit {\n\n  options: FormGroup;\n\n  module = new FormGroup({\n    name: new FormControl('')\n  });\n\n  message: string;\n  \n  onSubmit(): void {\n    this.addModule(this.module.value);\n    this.module.reset();\n  }\n\n  addModule(body): void {\n    const path = 'insertModule';\n    const type = 'module'\n    this.configService.insert(path, body, type).subscribe(res => {\n      console.log(res)\n      this.message = this.loggerService.messages[this.loggerService.messages.length -1]\n    });\n  }\n\n  constructor(private configService: ConfigService, fb: FormBuilder, private loggerService: LoggerService) { \n    this.options = fb.group({\n      subComponent: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1 class=\"mat-display-3\">New Module</h1>\n</div>\n<button mat-button color=\"primary\" routerLink=\"/modules\">Back to Modules</button>\n\n<div *ngIf=\"message\">{{message}}</div>\n\n<mat-card>\n    <form [formGroup]=\"module\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Module name\" type=\"text\" formControlName=\"name\" required />\n        </mat-form-field>\n        <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!module.valid\">Submit</button>\n    </form>\n</mat-card>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ConfigService } from '../config.service';\nimport { LoggerService } from '../logger.service';\nimport { SwCompManagerModule } from '../shared/module.model';\n\n\n@Component({\n  selector: 'app-releases',\n  templateUrl: './releases.component.html',\n  styleUrls: ['./releases.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ReleasesComponent implements OnInit {\n\n  modules: SwCompManagerModule[];\n  message: string;\n\n  columns: String[] = [\"name\", \"components\", \"actions\"];\n  dataSource = new MatTableDataSource<SwCompManagerModule>();\n  expandedModule: SwCompManagerModule | null;\n\n  addModuleMode = false;\n  compareMode = false;\n  compareSubmitted = false;\n  disabled = false;\n  modulesToCompare: String[] = [];\n  selection = new SelectionModel<SwCompManagerModule>(true, []);\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  // Get all modules and set them to table\n  getModules(): void {\n    this.configService.getFullModules().subscribe(res => {\n      this.dataSource.data = res;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  // Search bar behaviour\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  // Set compare mode on to select modules to compare\n  onCompareMode(cancel: Boolean): void {\n    if (cancel) {\n      this.compareMode = false;\n      this.compareSubmitted = false;\n      this.columns.shift();\n    }\n    else {\n      this.compareMode = true;\n      this.columns.unshift(\"select\");\n    }\n  }\n\n  // When compare selection is submitted\n  onCompareSubmit(): void {\n    this.compareSubmitted = true;\n    this.message = \"\";\n  }\n\n  // Select modules to compare\n  onSelect(row: SwCompManagerModule) {\n    `${this.selection.isSelected(row) ? this.modulesToCompare.splice(this.modulesToCompare.indexOf(row.name), 1) : this.modulesToCompare.push(row.name)}`;\n    if (this.modulesToCompare.length >= 2) {\n      this.disabled = true;\n    }\n    else {\n      this.disabled = false;\n    }\n  }\n\n  // Go back to modules view from compare view\n  onCancel(): void {\n    this.compareSubmitted = false;\n    this.onCompareMode(true);\n    this.addModuleMode = false;\n  }\n\n  onDelete(moduleName): void {\n    const path = `delete/module/${moduleName}`;\n    const type = 'module';\n    this.configService.delete(path, type).subscribe(_ => {\n      this.message = this.loggerService.messages[this.loggerService.messages.length -1]\n    });\n    this.getModules();\n  }\n\n  constructor(private configService: ConfigService, private loggerService: LoggerService)  { }\n\n  ngOnInit(): void {\n    this.getModules();\n  }\n}\n","<div>\n    <h1 class=\"mat-display-3\">Modules</h1>\n</div>\n\n<div *ngIf=\"message\">{{message}}</div>\n\n<!-- Filtering and options -->\n<div *ngIf=\"!compareSubmitted && !addModuleMode\">\n    <div class=\"row\">\n        <mat-form-field class=\"col-md-11\">\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\" />\n        </mat-form-field>\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Options\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"onCompareMode(false)\" *ngIf=\"!compareMode\">\n                <span>Compare Modules</span>\n            </button>\n            <button mat-menu-item disabled *ngIf=\"compareMode\">\n                <span>Compare Modules</span>\n            </button>\n            <button mat-menu-item routerLink=\"/insert-module\">\n                <span>Add a Module</span>\n            </button>\n        </mat-menu>\n    </div>\n\n    <!-- Module table -->\n    <div class=\"mat-elevation-z8 module-table\">\n        <div class=\"table-header\" *ngIf=\"compareMode\">\n            <h2 class=\"mat-h2\">Select two Modules to compare</h2>\n        </div>\n        \n        <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n\n            <!-- Checkbox column for compare selection-->\n            <ng-container *ngIf=\"compareMode\" matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef> select </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <mat-checkbox [checked]=\"selection.isSelected(row)\"\n                        (change)=\"onSelect(row)\"\n                        [disabled]=\"!selection.isSelected(row) && disabled\"\n                        (change)=\"$event ? selection.toggle(row) : null\">\n                    </mat-checkbox>\n                </td>\n            </ng-container>\n\n            <!-- Other columns -->\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> name </th>\n                <td mat-cell *matCellDef=\"let module\" routerLink=\"/modules/{{module.name}}\">{{module.name}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"components\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> components </th>\n                <td mat-cell *matCellDef=\"let module\" routerLink=\"/modules/{{module.name}}\">{{module.components.length}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"width: 10px;\"> actions </th>\n                <td mat-cell *matCellDef=\"let module\">\n                    <div class=\"actions\">\n                        <button mat-button color=\"warn\" (click)=\"onDelete(module.name)\">Delete</button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <!-- Expanded content -->\n            <ng-container matColumnDef=\"expandedDetail\">\n                <td mat-cell *matCellDef=\"let module\" [attr.colspan]=\"columns.length\">\n                    <div class=\"module-detail\" [@detailExpand]=\"module == expandedModule ? 'expanded' : 'collapsed'\">\n                        <!-- Expanded content can be added here -->\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n            <tr mat-row *matRowDef=\"let module; columns: columns;\"\n                class=\"module-row\" [class.expanded-row]=\"expandedModule === module\"\n                (click)=\"expandedModule = expandedModule === module ? null : module\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n        </table>\n        <mat-paginator [length]=\"100\"\n                    [pageSize]=\"10\"\n                    [pageSizeOptions]=\"[10, 20, 50, 100]\"\n                    showFirstLastButtons>\n        </mat-paginator>\n        <div class=\"button-group\" *ngIf=\"compareMode\">\n            <button class=\"col-md-2\" mat-stroked-button color=\"primary\" (click)=\"onCompareMode(true)\">Cancel</button>\n            <button class=\"col-md-2\" mat-raised-button color=\"primary\" (click)=\"onCompareSubmit()\" *ngIf=\"modulesToCompare.length == 2\">Compare</button>\n            <button class=\"col-md-2\" mat-raised-button disabled *ngIf=\"modulesToCompare.length < 2\">Compare</button>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"addModuleMode && !compareSubmitted\">\n    <button mat-button color=\"primary\" (click)=\"onCancel()\">Back to Modules</button>\n    <app-insert-module></app-insert-module>\n</div>\n\n<div *ngIf=\"compareSubmitted\">\n    <button mat-button color=\"primary\" (click)=\"onCancel()\">Back to Modules</button>\n    <app-compare [modulesToCompare]=\"modulesToCompare\"></app-compare>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ConfigService } from '../config.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SwCompManagerModule } from '../shared/module.model';\nimport { SwCompManagerComponent } from '../shared/component.model';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-release-detail',\n  templateUrl: './release-detail.component.html',\n  styleUrls: ['./release-detail.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ReleaseDetailComponent implements OnInit {\n\n  module: SwCompManagerModule;\n  components: SwCompManagerComponent[];\n  edit: boolean = false;\n  \n  columns: String[] = [\"name\", \"version\", \"url\", \"license\", \"copyright\", \"usage_type\", \"date\"];\n  dataSource = new MatTableDataSource<SwCompManagerComponent>();\n  expandedComponent: SwCompManagerComponent | null;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private configService: ConfigService,\n    private location: Location\n  ) { }\n\n  getRelease(): void {\n    const name = this.route.snapshot.paramMap.get('name');\n    this.configService.getRelease(name).subscribe(res => {\n      this.module = res;\n      this.dataSource.data = res.components;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onEdit(): void {\n    if (this.edit) {\n      this.edit = false;\n    }\n    else {\n      this.edit = true;\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  ngOnInit(): void {\n    this.getRelease();\n  }\n\n}\n","<!-- Module info-->\n<div class=\"row\">\n    <div class=\"col\">\n        <h1 class=\"mat-display-2\" *ngIf=\"module\">{{module.name}}</h1>\n    </div>\n</div>\n\n<!-- Module components-->\n<div class=\"row\">\n    <div class=\"col\">\n        <h2 *ngIf=\"module\">{{module.name}} has {{module.components.length}} components</h2>\n    </div>\n</div>\n\n<!-- Go back -->\n<div class=\"row\">\n    <div class=\"col\">\n        <button (click)=\"goBack()\" mat-button color=\"primary\">Back to modules</button>\n    </div>\n</div>\n\n<!-- Filtering -->\n<div class=\"row\">\n    <div class=\"col\">\n        <mat-form-field>\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\" />\n        </mat-form-field>\n    </div>\n</div>\n\n\n<!-- Component table-->\n<div class=\"component-table\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" multiTemplateDataRows>\n        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columns\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.toUpperCase().replace(\"_\", \" \")}} </th>\n            <td mat-cell *matCellDef=\"let component\">{{component[column]}}</td>\n        </ng-container>\n\n        <!-- Expanded content -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let component\" [attr.colspan]=\"columns.length\">\n                <div class=\"component-detail\" [@detailExpand]=\"component == expandedComponent ? 'expanded' : 'collapsed'\">\n                    <ul>\n                        <li>Usage: {{component.usage_type}}</li>\n                        <li>Attribute value 1: {{component.attr_value1}}</li>\n                        <li>Attribute value 2: {{component.attr_value2}}</li>\n                        <li>Attribute value 3: {{component.attr_value3}}</li>\n                        <li>Date: {{component.date}}</li>\n                        <li>Comment 1: {{component.comment_one}}</li>\n                        <li>Comment 2: {{component.comment_two}}</li>\n                    </ul>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let component; columns: columns;\"\n            class=\"component-row\" [class.expanded-row]=\"expandedComponent === component\"\n            (click)=\"expandedComponent = expandedComponent === component ? null : component\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n    </table>\n</div>\n\n<!-- Add components-->\n<div class=\"row\">\n    <div class=\"col\">\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                Add Components to this Module\n            </mat-expansion-panel-header>\n            <app-insert-comp-to-mod *ngIf=\"module\" [modulename]=\"module.name\"></app-insert-comp-to-mod>\n        </mat-expansion-panel>\n    </div>\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfigService } from '../config.service';\nimport { SwCompManagerModule } from '../shared/module.model';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.css']\n})\nexport class CompareComponent implements OnInit {\n\n  @Input() modulesToCompare?: String[];\n  same = new MatTableDataSource<any>();\n  exFirst = new MatTableDataSource<any>();\n  exSecond = new MatTableDataSource<any>();\n  columns: String[] = [\"name\", \"version\"];\n  @ViewChild(MatSort) sort: MatSort;\n\n  getComparison(modulesToCompare): void {\n    var body = {\"first\" : \"\", \"second\" : \"\"};\n    body.first = modulesToCompare[0];\n    body.second = modulesToCompare[1];\n\n    this.configService.getComparison(body).subscribe(res => {\n      this.same = res.same;\n      this.exFirst = res.ex_first;\n      this.exSecond = res.ex_second;\n      this.same.sort = this.sort;\n      this.exFirst.sort = this.sort;\n      this.exSecond.sort = this.sort;\n    });\n  }\n\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void { \n    this.getComparison(this.modulesToCompare);\n  }\n}\n","<h1>Comparing {{modulesToCompare[0]}} and {{modulesToCompare[1]}}</h1>\n<div class=\"mat-elevation-z8 comparison-table\">\n    <div class=\"table-header\">\n        <h2 class=\"mat-h2\">Same components</h2>\n    </div>\n    <table mat-table [dataSource]=\"same\" matSort>\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> name </th>\n            <td mat-cell *matCellDef=\"let component\"> {{component[0]}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"version\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> version </th>\n            <td mat-cell *matCellDef=\"let component\"> {{component[1]}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let component; columns: columns;\" class=\"component-row\"></tr>\n    </table>\n</div>\n\n<div class=\"mat-elevation-z8 comparison-table\">\n    <div class=\"table-header\">\n        <h2 class=\"mat-h2\">Exclusive to {{modulesToCompare[0]}}</h2>\n    </div>\n    <table mat-table [dataSource]=\"exFirst\" matSort>\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> name </th>\n            <td mat-cell *matCellDef=\"let component\"> {{component[0]}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"version\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> version </th>\n            <td mat-cell *matCellDef=\"let component\"> {{component[1]}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let component; columns: columns;\" class=\"component-row\"></tr>\n    </table>\n</div>\n\n<div class=\"mat-elevation-z8 comparison-table\">\n    <div class=\"table-header\">\n        <h2 class=\"mat-h2\">Exclusive to {{modulesToCompare[1]}}</h2>\n    </div>\n    <table mat-table [dataSource]=\"exSecond\" matSort>\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> name </th>\n            <td mat-cell *matCellDef=\"let component\"> {{component[0]}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"version\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> version </th>\n            <td mat-cell *matCellDef=\"let component\"> {{component[1]}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let component; columns: columns;\" class=\"component-row\"></tr>\n    </table>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Software Component Manager';\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <header>\n      <div class=\"container\">\n        <h1 class=\"mat-typography\">{{title}}</h1>\n      </div>\n    </header>\n  </div>\n</div>\n<div class=\"container content\">\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/modules\" class=\"nav-link active\">Modules</a>\n        <a mat-list-item routerLink=\"/components\" class=\"nav-link\">Components</a>\n        <a mat-list-item routerLink=\"/insert\" class=\"nav-link\">Insert</a>\n        <a mat-list-item routerLink=\"/log\" class=\"nav-link\">Log</a>\n      </mat-nav-list>\n    </div>\n    <div class=\"col\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","<div>\n    <h1 class=\"mat-display-3\">Log</h1>\n</div>\n<div *ngIf=\"loggerService.messages.length\">\n    <button mat-button color=\"primary\" (click)=\"loggerService.clear()\">Clear log</button>\n    <div *ngFor='let message of loggerService.messages'> {{message}} </div>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.css']\n})\nexport class LogComponent implements OnInit {\n\n  constructor(public loggerService: LoggerService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule , FormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIcon, MatIconModule } from '@angular/material/icon'\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n\nimport { AppComponent } from './app.component';\nimport { ReleasesComponent } from './releases/releases.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\n\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { CompareComponent } from './compare/compare.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { InsertModuleComponent } from './insert-module/insert-module.component';\nimport { InsertComponentComponent } from './insert-component/insert-component.component';\nimport { InsertCompToModComponent } from './insert-comp-to-mod/insert-comp-to-mod.component';\nimport { CompsComponent } from './comps/comps.component';\nimport { InsertFileComponent } from './insert-file/insert-file.component';\nimport { LogComponent } from './log/log.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReleasesComponent,\n    ReleaseDetailComponent,\n    DataInputComponent,\n    CompareComponent,\n    InsertModuleComponent,\n    InsertComponentComponent,\n    InsertCompToModComponent,\n    CompsComponent,\n    InsertFileComponent,\n    LogComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule, MatCheckboxModule,\n    MatTableModule, MatSortModule,\n    MatFormFieldModule, MatInputModule,\n    MatCardModule, MatExpansionModule,\n    MatListModule, MatPaginatorModule,\n    MatMenuModule, MatIconModule,\n    MatSnackBarModule, MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-insert-component',\n  templateUrl: './insert-component.component.html',\n  styleUrls: ['./insert-component.component.css']\n})\nexport class InsertComponentComponent implements OnInit {\n\n  options: FormGroup;\n\n  component = new FormGroup({\n    name: new FormControl(''),\n    url: new FormControl(''),\n    version: new FormControl(''),\n    license: new FormControl(''),\n    copyright: new FormControl('')\n  });\n\n  message: string;\n\n  onSubmit(): void {\n    this.addComponent(this.component.value);\n    this.component.reset();\n  }\n\n  addComponent(body) {\n    var path: string;\n    var type: string;\n    this.options.value.subComponent ? path = 'insertSubComponent' : path = 'insertComponent';\n    this.options.value.subComponent ? type = 'sub-component' : type = 'component';\n    this.configService.insert(path, body, type).subscribe(_ => this.message = this.loggerService.messages[this.loggerService.messages.length -1]);\n    \n  }\n\n  constructor(private configService: ConfigService, fb: FormBuilder, private loggerService: LoggerService) { \n    this.options = fb.group({\n      subComponent: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1 class=\"mat-display-3\">New Component</h1>\n</div>\n\n<button mat-button color=\"primary\" routerLink=\"/components\">Back to Components</button>\n<div *ngIf=\"message\">{{message}}</div>\n\n<mat-card>\n    <form [formGroup]=\"component\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Name\" type=\"text\" formControlName=\"name\" required />\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Url\" type=\"text\" formControlName=\"url\">\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Version\" type=\"text\" formControlName=\"version\" required />\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"License\" type=\"text\" formControlName=\"license\" />\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Copyright\" type=\"text\" formControlName=\"copyright\" />\n        </mat-form-field>\n        <form [formGroup]=\"options\">\n            <mat-checkbox formControlName=\"subComponent\" id=\"sub\">Sub-Component</mat-checkbox>\n        </form>\n        <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!component.valid\">Submit</button>\n    </form>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.css']\n})\nexport class DataInputComponent implements OnInit {\n  \n  private files: File[] = []; \n  fileForm = new FormGroup({\n    file: new FormControl('')\n  })\n\n  onFileSelected(event): void {\n    this.files.push(event.target.files[0]);\n  }\n\n  onSubmit() {\n    var data: string = '';\n    var jsonData;\n    if (this.files) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        data = event.target.result as string;\n        jsonData = JSON.parse(data);\n        this.addData(jsonData);\n      }\n      \n      this.files.forEach(file => reader.readAsText(file));\n      \n    }\n    this.fileForm.reset();\n    this.files.splice(0, this.files.length);\n  }\n\n  addData(body): void {\n    const path = ''; // TODO: add path when endpoint is ready\n    // this.configService.insert(path, body).subscribe();\n    console.log(body);\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Insert data</h2>\n</div>\n\n<form [formGroup]=\"fileForm\" (ngSubmit)=\"onSubmit()\">\n    <input formControlName=\"file\" type=\"file\" accept=\".json\" id=\"file\" class=\"form-control\" (change)=\"onFileSelected($event)\">\n    <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n</form>","import { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { ConfigService } from '../config.service';\nimport { LoggerService } from '../logger.service';\nimport { SwCompManagerComponent } from '../shared/component.model';\n\n@Component({\n  selector: 'app-comps',\n  templateUrl: './comps.component.html',\n  styleUrls: ['./comps.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class CompsComponent implements OnInit {\n  components: SwCompManagerComponent[];\n  message: string;\n\n  columns: String[] = [\"name\", \"version\", \"url\", \"license\", \"copyright\", \"actions\"];\n  dataSource = new MatTableDataSource<SwCompManagerComponent>();\n  expandedComponent: SwCompManagerComponent | null;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  getComponents(): void {\n    this.configService.getComponents().subscribe(res => {\n      this.dataSource.data = res;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onDelete(name, version): void {\n    const path = `delete/component/${name}:${version}`;\n    const type = 'component';\n    this.configService.delete(path, type).subscribe(_ => {\n      this.message = this.loggerService.messages[this.loggerService.messages.length -1]\n    });\n    this.getComponents();\n  }\n\n  constructor(private configService: ConfigService, private loggerService: LoggerService)  { }\n\n  ngOnInit(): void {\n    this.getComponents();\n  }\n}\n","<!-- Header -->\n<div class=\"row\">\n    <div class=\"col\">\n        <h1 class=\"mat-display-3\">Components</h1>\n    </div>\n</div>\n\n<div *ngIf=\"message\">{{message}}</div>\n\n<!-- Filtering -->\n<mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\" />\n</mat-form-field>\n\n<!-- Component table -->\n<div class=\"mat-elevation-z8 component-table\">\n    <table mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columns\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\n            <td mat-cell *matCellDef=\"let component\">\n                <span *ngIf=\"column != 'actions'\">{{component[column]}}</span>\n                <span *ngIf=\"column == 'actions'\"><button mat-button color=\"warn\" (click)=\"onDelete(component.name, component.version)\">Delete</button></span>\n            </td>\n        </ng-container>\n\n        <!-- Expanded content -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let component\" [attr.colspan]=\"columns.length\">\n                <div class=\"component-detail\" [@detailExpand]=\"component == expandedComponent ? 'expanded' : 'collapsed'\">\n                    <!-- Expanded content can be added here -->\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n        <tr mat-row *matRowDef=\"let component; columns: columns;\"\n            class=\"component-row\" [class.expanded-row]=\"expandedComponent === component\"\n            (click)=\"expandedComponent = expandedComponent === component ? null : component\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n    </table>\n    <mat-paginator [length]=\"100\"\n                        [pageSize]=\"10\"\n                        [pageSizeOptions]=\"[10, 20, 50, 100]\"\n                        showFirstLastButtons>\n    </mat-paginator>\n</div>\n<button mat-button color=\"primary\" routerLink=\"/insert-component\">Add Components</button>","import { NgModule } from '@angular/core';\nimport { Router, RouterModule, Routes } from '@angular/router';\nimport { CompsComponent } from './comps/comps.component';\nimport { InsertComponentComponent } from './insert-component/insert-component.component';\nimport { InsertFileComponent } from './insert-file/insert-file.component';\nimport { InsertModuleComponent } from './insert-module/insert-module.component';\nimport { LogComponent } from './log/log.component';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\nimport { ReleasesComponent } from './releases/releases.component';\n\nconst routes: Routes = [\n  { path: 'modules/:name', component: ReleaseDetailComponent },\n  { path: 'insert-module', component: InsertModuleComponent },\n  { path: 'modules', component: ReleasesComponent },\n  { path: 'insert-component', component: InsertComponentComponent },\n  { path: 'components', component: CompsComponent },\n  { path: 'insert', component: InsertFileComponent },\n  { path: 'log', component: LogComponent },\n  { path: '', redirectTo: 'modules', pathMatch: 'full' }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, retry, map, tap } from 'rxjs/operators';\n\nimport { SwCompManagerModule } from './shared/module.model';\nimport { LoggerService } from './logger.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private url = 'http://localhost:8081';\n\n  // Get all modules\n  getModules(): Observable<any> {\n    const url = `${this.url}/releases`;\n    return this.http.post<any>(url, null)\n      .pipe(\n        tap(_ => this.log('fetched modules')),\n        catchError(this.handleError<String[]>('getModules', [])));\n  }\n\n  // Get full info on all modules\n  getFullModules(): Observable<any> {\n    const url = `${this.url}/moduleData`;\n    return this.http.post<any>(url, null)\n      .pipe(\n        tap(_ => this.log('fetched modules')),\n        catchError(this.handleError<String[]>('getFullModules', [])));\n  }\n\n  // Get details of selected release\n  getRelease(name: string): Observable<any> {\n    const url = `${this.url}/releases/${name}`;\n    return this.http.post(url, null)\n      .pipe(\n        tap(_ => this.log(`fetched details of module with name ${name}`)),\n        catchError(this.handleError<any>(`getRelease id=${name}`)));\n  }\n\n  // Get comparison of two selected releases\n  getComparison(body): Observable<any> {\n    const url = `${this.url}/compare/`\n    return this.http.post(url, body)\n    .pipe(catchError(this.handleError<any>('getComparison', [])));\n  }\n\n  // Get all components\n  getComponents(): Observable<any> {\n    const url = `${this.url}/components`;\n    return this.http.post<any>(url, null)\n      .pipe(catchError(this.handleError<String[]>('getComponent', [])));\n  }\n\n  // Insert data\n  insert(path: string, body: object, type: string): Observable<any> {\n    const url = `${this.url}/${path}`;\n    return this.http.put(url, body)\n    .pipe(\n      tap((newItem) => this.log(`added ${type} with name ${newItem[0].name}`)),\n      catchError(this.handleError<any>('insert')));\n  }\n\n  insertFile(path: string, body: object, fileName: string): Observable<any> {\n    const url = `${this.url}/${path}`;\n    return this.http.put(url, body)\n    .pipe(\n      tap((newItem) => this.log(`added file with name ${fileName}`)),\n      catchError(this.handleError<any>('insertFile')));\n  }\n\n  insertCompToMod(path: string, body: object): Observable<any> {\n    const url = `${this.url}/${path}`;\n    return this.http.put(url, body)\n    .pipe(\n      tap((newItem) => this.log(`added component with id ${newItem[0].comp_id} to module with id ${newItem[0].module_id}`)),\n      catchError(this.handleError<any>('insertCompToMod')));\n  }\n\n\n  // Delete data\n  delete(path: String, type: string): Observable<any> {\n    const url = `${this.url}/${path}`;\n    return this.http.delete(url)\n    .pipe(\n      tap((newItem) => this.log(`deleted ${type} with name ${newItem[0].name}`)),\n      catchError(this.handleError<any>('delete')));\n  }\n\n  private log(message: string) {\n    this.loggerService.add(message);\n  }\n\n  // Error handling\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    }\n  }\n\n  constructor(private http: HttpClient, private loggerService: LoggerService) { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}