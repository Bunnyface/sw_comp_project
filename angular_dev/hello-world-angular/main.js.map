{"version":3,"sources":["./src/app/insert-module/insert-module.component.ts","./src/app/insert-module/insert-module.component.html","./src/app/releases/releases.component.html","./src/app/releases/releases.component.ts","./src/app/components/components.component.ts","./src/app/components/components.component.html","./src/environments/environment.ts","./src/app/release-detail/release-detail.component.html","./src/app/release-detail/release-detail.component.ts","./src/app/compare/compare.component.html","./src/app/compare/compare.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/insert-component/insert-component.component.ts","./src/app/insert-component/insert-component.component.html","./src/app/data-input/data-input.component.ts","./src/app/data-input/data-input.component.html","./src/app/app-routing.module.ts","./src/app/config.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-insert-module',\n  templateUrl: './insert-module.component.html',\n  styleUrls: ['./insert-module.component.css']\n})\nexport class InsertModuleComponent implements OnInit {\n\n  module = new FormGroup({\n    name: new FormControl('')\n  });\n\n  onSubmit(): void {\n    console.log(this.module.value);\n    // this.configService.addModule(this.module.value)\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <h3>New module</h3>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"module\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Module name:</label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\">\n            </div>\n            <button type=\"submit\" [disabled]=\"!module.valid\" class=\"btn btn-primary mb-2\">Submit</button>\n        </form>\n    </div>\n</div>","<div>\n    <h2>Modules</h2>\n</div>\n<table class=\"table table-sm table-hover\">\n    <thead class=\"thead-dark\">\n        <tr>\n            <th scope=\"col\">Name</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let module of modules\" [ngValue]=\"module\">\n            <td routerLink=\"/modules/{{module}}\">{{module}}</td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { Module } from '../module';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-releases',\n  templateUrl: './releases.component.html',\n  styleUrls: ['./releases.component.css']\n})\nexport class ReleasesComponent implements OnInit {\n\n  modules: any = [];\n\n  getModules(): void {\n    this.configService.getModules().subscribe(res => this.modules = res);\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getModules();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-components',\n  templateUrl: './components.component.html',\n  styleUrls: ['./components.component.css']\n})\nexport class ComponentsComponent implements OnInit {\n\n  @Input() module_id;\n  components: JSON;\n\n  newComponent = new FormGroup({\n    comp_id: new FormControl(''),\n    usage_type: new FormControl(''),\n    attr_value1: new FormControl(''),\n    attr_value2: new FormControl(''),\n    attr_value3: new FormControl(''),\n    date: new FormControl(''),\n    comment_one: new FormControl(''),\n    comment_two: new FormControl('')\n  });\n\n  getComponents(): void {\n    this.configService.getComponents().subscribe(res => this.components = res);\n  }\n\n  onSubmit() {\n    this.addComponent(this.newComponent.value);\n  }\n\n  // Add selected component to module\n  addComponent(component) {\n    const path = \"module_component\";\n    const body = this.formatBody(component);\n    this.configService.insert(path, body).subscribe();\n    console.log(body);\n  }\n\n  // Format the request body to fit insert endpoint\n  formatBody(component): object {\n    var columns = [\"module_id\"];\n    var data = [this.module_id.toString()];\n    Object.keys(component).map((value) => columns.push(value));\n    Object.values(component).map((value) => data.push(value));\n    var body = { \"columns\": [], \"data\": [[]] };\n    body.columns = columns;\n    body.data[0] = data;\n    return body;\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getComponents();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <h3>Add an existing component to the module</h3>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"newComponent\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Component</label>\n                <select formControlName=\"comp_id\" class=\"form-control\">\n                    <option *ngFor=\"let component of components\" value=\"{{component[0]}}\">{{component[1]}}</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"usageType\">Usage type</label>\n                <input type=\"text\" formControlName=\"usage_type\" class=\"form-control\" id=\"usageType\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"attr_value1\">Attribute value 1</label>\n                <input type=\"text\" formControlName=\"attr_value1\" class=\"form-control\" id=\"attr_value1\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"attr_value2\">Attribute value 2</label>\n                <input type=\"text\" formControlName=\"attr_value2\" class=\"form-control\" id=\"attr_value2\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"attr_value3\">Attribute value 3</label>\n                <input type=\"text\" formControlName=\"attr_value3\" class=\"form-control\" id=\"attr_value3\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"date\">Date</label>\n                <input type=\"date\" formControlName=\"date\" class=\"form-control\" id=\"date\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"CommentOne\">Comment 1</label>\n                <input type=\"text\" formControlName=\"comment_one\" class=\"form-control\" id=\"CommentOne\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"CommentTwo\">Comment 2</label>\n                <input type=\"text\" formControlName=\"comment_two\" class=\"form-control\" id=\"CommentTwo\">\n            </div>\n            <button type=\"submit\" [disabled]=\"!newComponent.valid\" class=\"btn btn-primary mb-2\">Submit</button>\n        </form>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- Module info-->\n<div class=\"row\">\n    <div class=\"col\">\n        <h3>Module info</h3>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"module\">\n    <div class=\"col\">\n        <table class=\"table table-sm module-table\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{{module.name}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<!-- Module components-->\n<div class=\"row\">\n    <div class=\"col\">\n        <h3>Module components</h3>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"module\">\n    <div class=\"col\">\n        <table class=\"table table-sm module-table\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Component</th>\n                    <th scole=\"col\">Version</th>\n                    <th scole=\"col\">Url</th>\n                    <th scole=\"col\">License</th>\n                    <th scole=\"col\">Copyright</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let component of module.components\">\n                    <td *ngFor=\"let value of component\">{{value}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<!-- Add components-->\n<div class=\"row\" *ngIf=\"!edit\">\n    <div class=\"col\">\n        <button (click)=\"onEdit()\" class=\"btn btn-link btn-sm\">Add components to module</button>\n    </div>\n</div>\n\n<div *ngIf=\"edit\">\n    <button class=\"btn btn-sm btn-link\" (click)=\"onEdit()\">Cancel</button>\n    <app-components [module_id]=\"module.id\"></app-components>\n</div>\n\n<!-- Go back -->\n<div class=\"row\">\n    <div class=\"col\">\n        <button (click)=\"goBack()\" class=\"btn btn-link btn-sm\">Back to modules</button>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Module } from '../module'\nimport { ConfigService } from '../config.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-release-detail',\n  templateUrl: './release-detail.component.html',\n  styleUrls: ['./release-detail.component.css']\n})\nexport class ReleaseDetailComponent implements OnInit {\n\n  module: Module;\n  edit: boolean = false\n\n  constructor(\n    private route: ActivatedRoute,\n    private configService: ConfigService,\n    private location: Location\n  ) { }\n\n  getRelease(): void {\n    const name = this.route.snapshot.paramMap.get('name');\n    this.configService.getRelease(name).subscribe(res => this.module = res)\n  }\n\n  onEdit(): void {\n    if (this.edit) {\n      this.edit = false;\n    }\n    else {\n      this.edit = true;\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  ngOnInit(): void {\n    this.getRelease();\n  }\n\n}\n","<h2>Compare releases</h2>\n\n<form #compare=\"ngForm\" (ngSubmit)=\"onSubmit(compare.value)\">\n    <div class=\"form-group mb-2\">\n        <label for=\"first\" class=\"form-label\">Release</label>\n        <select class=\"form-control\" id=\"first\" ngModel name=\"first\">\n            <option *ngFor=\"let module of modules\" [ngValue]=\"module\">{{module}}</option>\n        </select>\n\n        <label for=\"second\" class=\"form-label\">Compare with</label>\n        <select class=\"form-control\" id=\"second\" ngModel name=\"second\">\n            <option *ngFor=\"let module of modules\" [ngValue]=\"module\">{{module}}</option>\n        </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success mb-2\">Valitse</button>\n</form>\n\n<div>\n    <code>{{comparison}}</code>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Module } from '../module';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.css']\n})\nexport class CompareComponent implements OnInit {\n\n  modules: any = [];\n  comparison: string;\n\n  getModules(): void {\n    this.configService.getModules().subscribe(res => this.modules = res);\n  }\n\n  getComparison(first: string, second: string): void {\n    this.configService.getComparison(first, second).subscribe(res => this.comparison = JSON.stringify(res));\n  }\n\n  onSubmit(data) {\n    const first = data.first;\n    const second = data.second;\n    this.getComparison(first, second);\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getModules();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Software Component Manager';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h1>{{title}}</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <ul class=\"nav\">\n      <li class=\"nav-item\">\n        <a routerLink=\"/modules\" class=\"nav-link active\">Modules</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/compare\" class=\"nav-link\">Compare</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/insert\" class=\"nav-link\">Insert</a>\n      </li>\n    </ul>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule , FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ReleasesComponent } from './releases/releases.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\n\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { CompareComponent } from './compare/compare.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { InsertModuleComponent } from './insert-module/insert-module.component';\nimport { InsertComponentComponent } from './insert-component/insert-component.component';\nimport { ComponentsComponent } from './components/components.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReleasesComponent,\n    ReleaseDetailComponent,\n    DataInputComponent,\n    CompareComponent,\n    InsertModuleComponent,\n    InsertComponentComponent,\n    ComponentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-insert-component',\n  templateUrl: './insert-component.component.html',\n  styleUrls: ['./insert-component.component.css']\n})\nexport class InsertComponentComponent implements OnInit {\n\n  subComponent: boolean = false;\n\n  component = new FormGroup({\n    name: new FormControl(''),\n    url: new FormControl(''),\n    version: new FormControl(''),\n    license: new FormControl(''),\n    copyright: new FormControl('')\n  });\n\n  onSubmit(): void {\n    console.log(this.component.value);\n    console.log(this.subComponent)\n  }\n\n  onChange(isChecked: boolean): void {\n    if (isChecked) {\n      this.subComponent = true;\n    }\n    else {\n      this.subComponent = false;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <h3>New component</h3>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"component\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\">\n            </div>\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Url:</label>\n                <input type=\"text\" formControlName=\"url\" class=\"form-control\">\n            </div>\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Version:</label>\n                <input type=\"text\" formControlName=\"version\" class=\"form-control\">\n            </div>\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">License:</label>\n                <input type=\"text\" formControlName=\"license\" class=\"form-control\">\n            </div>\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Copyright:</label>\n                <input type=\"text\" formControlName=\"copyright\" class=\"form-control\">\n            </div>\n            <div class=\"form-check\">\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"sub\" (change)=\"onChange($event.target.checked)\">\n                <label  class=\"form-check-label\" for=\"sub\">Sub-component</label>\n              </div>\n            <button type=\"submit\" [disabled]=\"!component.valid\" class=\"btn btn-primary mb-2\">Submit</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.css']\n})\nexport class DataInputComponent implements OnInit {\n  \n  public file: File | null = null;\n\n  // Read the contents of the file and add data to database.\n  onFileSelected(event): void {\n\n    this.file = event.target.files[0];\n    var data: string = '';\n    var jsonData;\n\n    if (this.file) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        data = event.target.result as string;\n        console.log(data);\n        jsonData = JSON.parse(data);\n        this.configService.insert(\"releases\", jsonData).subscribe(res => console.log(res));\n      }\n      reader.readAsText(this.file);\n    }\n\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Insert data</h2>\n</div>\n\n<div class=\"form-group\">\n    <input type=\"file\" accept=\".json\" id=\"file\" class=\"form-control\" (change)=\"onFileSelected($event)\">\n</div>\n<p>{{ file ? \"File uploaded.\" : \"\" }}</p>","import { NgModule } from '@angular/core';\nimport { Router, RouterModule, Routes } from '@angular/router';\nimport { CompareComponent } from './compare/compare.component';\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\nimport { ReleasesComponent } from './releases/releases.component';\n\nconst routes: Routes = [\n  { path: 'modules/:name', component: ReleaseDetailComponent },\n  { path: 'modules', component: ReleasesComponent },\n  { path: 'compare', component: CompareComponent },\n  { path: 'insert', component: DataInputComponent },\n  { path: '', redirectTo: 'modules', pathMatch: 'full' }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, retry, map, tap } from 'rxjs/operators';\n\nimport { Module } from './module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private url = 'http://localhost:8081';\n\n  // Get all modules\n  getModules(): Observable<any> {\n    const url = `${this.url}/releases`;\n    return this.http.post<any>(url, null)\n      .pipe(catchError(this.handleError<String[]>('getModules', [])));\n  }\n\n  // Get details of selected release\n  getRelease(name: string): Observable<any> {\n    const url = `${this.url}/releases/${name}`;\n    return this.http.post(url, null)\n      .pipe(catchError(this.handleError<any>(`getRelease id=${name}`)));\n  }\n\n  // Get comparison of two selected releases\n  getComparison(first: string, second: string): Observable<any> {\n    const url = `${this.url}/compareReleases/${first}:${second}`\n    return this.http.post(url, null)\n    .pipe(catchError(this.handleError<any>('getComparison', [])));\n  }\n\n  // Get all components\n  getComponents(): Observable<any> {\n    const url = `${this.url}/components`;\n    return this.http.post<any>(url, null)\n      .pipe(catchError(this.handleError<String[]>('getComparison', [])));\n  }\n\n  // Insert data\n  insert(path: string, body: object): Observable<any> {\n    const url = `${this.url}/insert/${path}`;\n    return this.http.put(url, body)\n    .pipe(catchError(this.handleError<any>('insert')));\n  }\n\n\n  // Error handling\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(error); // log to console\n      console.log(`${operation} failed: ${error.message}`); // user-friendly message\n      return of(result as T); // return a safe value to keep app running\n    }\n  }\n\n  constructor(private http: HttpClient) { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}