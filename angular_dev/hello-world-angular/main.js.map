{"version":3,"sources":["./src/app/insert-comp-to-mod/insert-comp-to-mod.component.ts","./src/app/insert-comp-to-mod/insert-comp-to-mod.component.html","./src/app/insert-module/insert-module.component.ts","./src/app/insert-module/insert-module.component.html","./src/app/releases/releases.component.ts","./src/app/releases/releases.component.html","./src/app/components/components.component.ts","./src/app/components/components.component.html","./src/environments/environment.ts","./src/app/release-detail/release-detail.component.ts","./src/app/release-detail/release-detail.component.html","./src/app/compare/compare.component.html","./src/app/compare/compare.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/insert-component/insert-component.component.ts","./src/app/insert-component/insert-component.component.html","./src/app/data-input/data-input.component.ts","./src/app/data-input/data-input.component.html","./src/app/comps/comps.component.ts","./src/app/comps/comps.component.html","./src/app/app-routing.module.ts","./src/app/config.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\nimport { SwCompManagerComponent } from '../shared/component.model';\n\n@Component({\n  selector: 'app-insert-comp-to-mod',\n  templateUrl: './insert-comp-to-mod.component.html',\n  styleUrls: ['./insert-comp-to-mod.component.css']\n})\nexport class InsertCompToModComponent implements OnInit {\n\n  @Input() modulename;\n  components: Array<SwCompManagerComponent>;\n\n  options: FormGroup;\n  newComponent = new FormGroup({\n    componentname: new FormControl(''),\n    usage_type: new FormControl(''),\n    attr_value1: new FormControl(''),\n    attr_value2: new FormControl(''),\n    attr_value3: new FormControl(''),\n    date: new FormControl(''),\n    comment_one: new FormControl(''),\n    comment_two: new FormControl('')\n  });\n\n  getComponents(): void {\n    this.configService.getComponents().subscribe(res => this.components = res);\n  }\n\n  onSubmit() {\n    this.addComponent(this.newComponent.value);\n    this.newComponent.reset();\n  }\n\n  // Add selected component to module\n  addComponent(body) {\n    const path = \"insertComponentToModule\";\n    body.modulename = this.modulename;\n    console.log(body);\n    this.configService.insert(path, body).subscribe();\n  }\n\n  constructor(private configService: ConfigService, fb: FormBuilder) { \n    this.options = fb.group({\n      subComponent: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  ngOnInit(): void {\n    this.getComponents();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"newComponent\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field>\n                <select matNativeControl placeholder=\"Component\" formControlName=\"componentname\">\n                    <option *ngFor=\"let component of components\" value=\"{{component.name}}\">{{component.name}} {{component.version}}</option>\n                </select>\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Usage type\" type=\"text\" formControlName=\"usage_type\" id=\"usageType\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Attribute value 1\" type=\"text\" formControlName=\"attr_value1\" id=\"attr_value1\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Attribute value 2\" type=\"text\" formControlName=\"attr_value2\" id=\"attr_value2\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Attribute value 3\" type=\"text\" formControlName=\"attr_value3\" id=\"attr_value3\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Date\" type=\"date\" formControlName=\"date\" id=\"date\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Comment 1\" type=\"text\" formControlName=\"comment_one\" id=\"CommentOne\" />\n            </mat-form-field>\n            <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                <input matInput placeholder=\"Comment 2\" type=\"text\" formControlName=\"comment_two\" id=\"CommentTwo\" />\n            </mat-form-field>\n            <button type=\"submit\" [disabled]=\"!newComponent.valid\" class=\"btn btn-primary mb-2\">Submit</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-insert-module',\n  templateUrl: './insert-module.component.html',\n  styleUrls: ['./insert-module.component.css']\n})\nexport class InsertModuleComponent implements OnInit {\n\n  options: FormGroup;\n\n  module = new FormGroup({\n    name: new FormControl('')\n  });\n\n  onSubmit(): void {\n    this.addModule(this.module.value);\n    this.module.reset();\n  }\n\n  addModule(body): void {\n    const path = 'insertModule';\n    this.configService.insert(path, body).subscribe();\n    console.log(body);\n  }\n\n  constructor(private configService: ConfigService, fb: FormBuilder) { \n    this.options = fb.group({\n      subComponent: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n<div class=\"row\">\n    <div class=\"col\">\n        <h3>New module</h3>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"module\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Module name:</label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\">\n            </div>\n            <button type=\"submit\" [disabled]=\"!module.valid\" class=\"btn btn-primary mb-2\">Submit</button>\n        </form>\n    </div>\n</div>\n-->\n<mat-expansion-panel>\n    <mat-expansion-panel-header>\n        <mat-panel-title>New Module</mat-panel-title>\n    </mat-expansion-panel-header>\n    <form [formGroup]=\"module\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Name\" type=\"text\" formControlName=\"name\" />\n        </mat-form-field>\n        <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!module.valid\">Submit</button>\n    </form>\n</mat-expansion-panel>","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ConfigService } from '../config.service';\nimport { SwCompManagerModule } from '../shared/module.model';\n\n\n@Component({\n  selector: 'app-releases',\n  templateUrl: './releases.component.html',\n  styleUrls: ['./releases.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ReleasesComponent implements OnInit {\n\n  modules: SwCompManagerModule[];\n  columns: String[] = [\"name\", \"components\"];\n  dataSource = new MatTableDataSource<SwCompManagerModule>();\n  expandedModule: SwCompManagerModule | null;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  getModules(): void {\n    this.configService.getFullModules().subscribe(res => {\n      this.dataSource.data = res;\n      this.dataSource.sort = this.sort;\n      console.log(this.dataSource.data);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(private configService: ConfigService)  { }\n\n  ngOnInit(): void {\n    this.getModules();\n  }\n}\n","<div>\n    <h1 class=\"mat-display-3\">Modules</h1>\n</div>\n<!--\n<table class=\"table table-sm table-hover\">\n    <thead class=\"thead-dark\">\n        <tr>\n            <th scope=\"col\">Name</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let module of modules\" [ngValue]=\"module\">\n            <td routerLink=\"/modules/{{module.name}}\">{{module.name}}</td>\n        </tr>\n    </tbody>\n</table>\n-->\n\n<!-- Filtering -->\n<mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\" />\n</mat-form-field>\n\n<!-- Module table -->\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" multiTemplateDataRows>\n    <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columns\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\n        <td mat-cell *matCellDef=\"let module\" routerLink=\"/modules/{{module.name}}\"><span *ngIf=\"column != 'components'\">{{module[column]}}</span><span *ngIf=\"column == 'components'\">{{module[column].length}}</span></td>\n    </ng-container>\n\n    <!-- Expanded content -->\n    <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let module\" [attr.colspan]=\"columns.length\">\n            <div class=\"module-detail\" [@detailExpand]=\"module == expandedModule ? 'expanded' : 'collapsed'\">\n                <!-- TODO: Add expanded content here and remove router link from above-->\n            </div>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n    <tr mat-row *matRowDef=\"let module; columns: columns;\"\n        class=\"module-row\" [class.expanded-row]=\"expandedModule === module\"\n        (click)=\"expandedModule = expandedModule === module ? null : module\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n</table>\n<app-insert-module></app-insert-module>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\nimport { SwCompManagerComponent } from '../shared/component.model';\n\n@Component({\n  selector: 'app-components',\n  templateUrl: './components.component.html',\n  styleUrls: ['./components.component.css']\n})\nexport class ComponentsComponent implements OnInit {\n\n  @Input() modulename;\n  components: Array<SwCompManagerComponent>;\n\n  newComponent = new FormGroup({\n    componentname: new FormControl(''),\n    usage_type: new FormControl(''),\n    attr_value1: new FormControl(''),\n    attr_value2: new FormControl(''),\n    attr_value3: new FormControl(''),\n    date: new FormControl(''),\n    comment_one: new FormControl(''),\n    comment_two: new FormControl('')\n  });\n\n  getComponents(): void {\n    this.configService.getComponents().subscribe(res => this.components = res);\n  }\n\n  onSubmit() {\n    this.addComponent(this.newComponent.value);\n    this.newComponent.reset();\n  }\n\n  // Add selected component to module\n  addComponent(body) {\n    const path = \"insertComponentToModule\";\n    body.modulename = this.modulename;\n    console.log(body);\n    this.configService.insert(path, body).subscribe();\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getComponents();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <h3>Add an existing component to the module</h3>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\">\n        <form [formGroup]=\"newComponent\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group mb-2\">\n                <label for=\"name\">Component</label>\n                <select formControlName=\"componentname\" class=\"form-control\">\n                    <option *ngFor=\"let component of components\" value=\"{{component.name}}\">{{component.name}} {{component.version}}</option>\n                </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"usageType\">Usage type</label>\n                <input type=\"text\" formControlName=\"usage_type\" class=\"form-control\" id=\"usageType\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"attr_value1\">Attribute value 1</label>\n                <input type=\"text\" formControlName=\"attr_value1\" class=\"form-control\" id=\"attr_value1\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"attr_value2\">Attribute value 2</label>\n                <input type=\"text\" formControlName=\"attr_value2\" class=\"form-control\" id=\"attr_value2\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"attr_value3\">Attribute value 3</label>\n                <input type=\"text\" formControlName=\"attr_value3\" class=\"form-control\" id=\"attr_value3\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"date\">Date</label>\n                <input type=\"date\" formControlName=\"date\" class=\"form-control\" id=\"date\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"CommentOne\">Comment 1</label>\n                <input type=\"text\" formControlName=\"comment_one\" class=\"form-control\" id=\"CommentOne\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"CommentTwo\">Comment 2</label>\n                <input type=\"text\" formControlName=\"comment_two\" class=\"form-control\" id=\"CommentTwo\">\n            </div>\n            <button type=\"submit\" [disabled]=\"!newComponent.valid\" class=\"btn btn-primary mb-2\">Submit</button>\n        </form>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ConfigService } from '../config.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SwCompManagerModule } from '../shared/module.model';\nimport { SwCompManagerComponent } from '../shared/component.model';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-release-detail',\n  templateUrl: './release-detail.component.html',\n  styleUrls: ['./release-detail.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ReleaseDetailComponent implements OnInit {\n\n  module: SwCompManagerModule;\n  components: SwCompManagerComponent[];\n  edit: boolean = false;\n  \n  columns: String[] = [\"name\", \"version\", \"url\", \"license\", \"copyright\", \"usage_type\", \"date\"];\n  dataSource = new MatTableDataSource<SwCompManagerComponent>();\n  expandedComponent: SwCompManagerComponent | null;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private configService: ConfigService,\n    private location: Location\n  ) { }\n\n  getRelease(): void {\n    const name = this.route.snapshot.paramMap.get('name');\n    this.configService.getRelease(name).subscribe(res => {\n      this.module = res;\n      // this.columns = Object.keys(res.components[0]);\n      this.dataSource.data = res.components;\n      this.dataSource.sort = this.sort;\n      console.log(this.dataSource.data);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onEdit(): void {\n    if (this.edit) {\n      this.edit = false;\n    }\n    else {\n      this.edit = true;\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  ngOnInit(): void {\n    this.getRelease();\n  }\n\n}\n","<!-- Module info-->\n<div class=\"row\">\n    <div class=\"col\">\n        <h1 class=\"mat-display-2\" *ngIf=\"module\">{{module.name}}</h1>\n    </div>\n</div>\n\n<!-- Module components-->\n<div class=\"row\">\n    <div class=\"col\">\n        <h2 *ngIf=\"module\">{{module.name}} has {{module.components.length}} components</h2>\n    </div>\n</div>\n\n<!-- Filtering -->\n<div class=\"row\">\n    <div class=\"col\">\n        <mat-form-field>\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\" />\n        </mat-form-field>\n    </div>\n</div>\n\n\n<!-- Component table-->\n<div class=\"row\">\n    <div class=\"col\">\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" multiTemplateDataRows>\n            <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columns\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.toUpperCase().replace(\"_\", \" \")}} </th>\n                <td mat-cell *matCellDef=\"let component\">{{component[column]}}</td>\n            </ng-container>\n\n            <!-- Expanded content -->\n            <ng-container matColumnDef=\"expandedDetail\">\n                <td mat-cell *matCellDef=\"let component\" [attr.colspan]=\"columns.length\">\n                    <div class=\"component-detail\" [@detailExpand]=\"component == expandedComponent ? 'expanded' : 'collapsed'\">\n                        <ul>\n                            <li>Usage: {{component.usage_type}}</li>\n                            <li>Attribute value 1: {{component.attr_value1}}</li>\n                            <li>Attribute value 2: {{component.attr_value2}}</li>\n                            <li>Attribute value 3: {{component.attr_value3}}</li>\n                            <li>Date: {{component.date}}</li>\n                            <li>Comment 1: {{component.comment_one}}</li>\n                            <li>Comment 2: {{component.comment_two}}</li>\n                        </ul>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n            <tr mat-row *matRowDef=\"let component; columns: columns;\"\n                class=\"component-row\" [class.expanded-row]=\"expandedComponent === component\"\n                (click)=\"expandedComponent = expandedComponent === component ? null : component\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n        </table>\n    </div>\n</div>\n\n<!-- Add components-->\n<div class=\"row\">\n    <div class=\"col\">\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                Add Components\n            </mat-expansion-panel-header>\n            <app-insert-comp-to-mod *ngIf=\"module\" [modulename]=\"module.name\"></app-insert-comp-to-mod>\n        </mat-expansion-panel>\n    </div>\n</div>\n\n\n\n<!--\n<div class=\"row\" *ngIf=\"!edit\">\n    <div class=\"col\">\n        <button (click)=\"onEdit()\" class=\"btn btn-link btn-sm\">Add components to module</button>\n    </div>\n</div>\n\n<div *ngIf=\"edit\">\n    <button class=\"btn btn-sm btn-link\" (click)=\"onEdit()\">Cancel</button>\n    <app-insert-comp-to-mod [modulename]=\"module.name\"></app-insert-comp-to-mod>\n</div>\n-->\n\n<!-- Go back -->\n<div class=\"row\">\n    <div class=\"col\">\n        <button (click)=\"goBack()\" class=\"btn btn-link btn-sm\">Back to modules</button>\n    </div>\n</div>","<h2>Compare releases</h2>\n\n<form #compare=\"ngForm\" (ngSubmit)=\"onSubmit(compare.value)\">\n    <div class=\"form-group mb-2\">\n        <label for=\"first\" class=\"form-label\">Release</label>\n        <select class=\"form-control\" id=\"first\" ngModel name=\"first\">\n            <option *ngFor=\"let module of modules\" [ngValue]=\"module\">{{module}}</option>\n        </select>\n\n        <label for=\"second\" class=\"form-label\">Compare with</label>\n        <select class=\"form-control\" id=\"second\" ngModel name=\"second\">\n            <option *ngFor=\"let module of modules\" [ngValue]=\"module\">{{module}}</option>\n        </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success mb-2\">Valitse</button>\n</form>\n\n<div>\n    <code>{{comparison}}</code>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../config.service';\nimport { SwCompManagerModule } from '../shared/module.model';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.css']\n})\nexport class CompareComponent implements OnInit {\n\n  modules: Array<SwCompManagerModule>;\n  comparison: string;\n\n  getModules(): void {\n    this.configService.getModules().subscribe(res => this.modules = res);\n  }\n\n  getComparison(first: string, second: string): void {\n    this.configService.getComparison(first, second).subscribe(res => this.comparison = JSON.stringify(res));\n  }\n\n  onSubmit(data) {\n    const first = data.first;\n    const second = data.second;\n    this.getComparison(first, second);\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getModules();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Software Component Manager';\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <header>\n      <div class=\"container\">\n        <h1 class=\"mat-typography\">{{title}}</h1>\n      </div>\n    </header>\n  </div>\n</div>\n<div class=\"container content\">\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <mat-nav-list>\n        <a mat-list-item routerLink=\"/modules\" class=\"nav-link active\">Modules</a>\n        <a mat-list-item routerLink=\"/components\" class=\"nav-link\">Components</a>\n        <a mat-list-item routerLink=\"/compare\" class=\"nav-link\">Compare Modules</a>\n        <a mat-list-item routerLink=\"/insert\" class=\"nav-link\">Insert</a>\n      </mat-nav-list>\n    </div>\n    <div class=\"col\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule , FormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatListModule } from '@angular/material/list';\n\nimport { AppComponent } from './app.component';\nimport { ReleasesComponent } from './releases/releases.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\n\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { CompareComponent } from './compare/compare.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { InsertModuleComponent } from './insert-module/insert-module.component';\nimport { InsertComponentComponent } from './insert-component/insert-component.component';\nimport { ComponentsComponent } from './components/components.component';\nimport { InsertCompToModComponent } from './insert-comp-to-mod/insert-comp-to-mod.component';\nimport { CompsComponent } from './comps/comps.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReleasesComponent,\n    ReleaseDetailComponent,\n    DataInputComponent,\n    CompareComponent,\n    InsertModuleComponent,\n    InsertComponentComponent,\n    ComponentsComponent,\n    InsertCompToModComponent,\n    CompsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule, MatCheckboxModule,\n    MatTableModule, MatSortModule,\n    MatFormFieldModule, MatInputModule,\n    MatCardModule, MatExpansionModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-insert-component',\n  templateUrl: './insert-component.component.html',\n  styleUrls: ['./insert-component.component.css']\n})\nexport class InsertComponentComponent implements OnInit {\n\n  options: FormGroup;\n\n  component = new FormGroup({\n    name: new FormControl(''),\n    url: new FormControl(''),\n    version: new FormControl(''),\n    license: new FormControl(''),\n    copyright: new FormControl('')\n  });\n\n  onSubmit(): void {\n    this.addComponent(this.component.value);\n    this.component.reset();\n  }\n\n  addComponent(body) {\n    var path: string;\n    this.options.value.subComponent ? path = 'insertSubComponent' : path = 'insertComponent';\n    this.configService.insert(path, body).subscribe();\n    console.log(this.options.value.subComponent, body);\n  }\n\n  constructor(private configService: ConfigService, fb: FormBuilder) { \n    this.options = fb.group({\n      subComponent: false,\n      floatLabel: 'auto'\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-expansion-panel>\n    <mat-expansion-panel-header>\n        <mat-panel-title>New component</mat-panel-title>\n    </mat-expansion-panel-header>\n    <form [formGroup]=\"component\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Name\" type=\"text\" formControlName=\"name\" />\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Url\" type=\"text\" formControlName=\"url\">\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Version\" type=\"text\" formControlName=\"version\" />\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"License\" type=\"text\" formControlName=\"license\" />\n        </mat-form-field>\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n            <input matInput placeholder=\"Copyright\" type=\"text\" formControlName=\"copyright\" />\n        </mat-form-field>\n        <form [formGroup]=\"options\">\n            <mat-checkbox formControlName=\"subComponent\" id=\"sub\">Sub-Component</mat-checkbox>\n        </form>\n        <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!component.valid\">Submit</button>\n    </form>\n</mat-expansion-panel>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.css']\n})\nexport class DataInputComponent implements OnInit {\n  \n  private files: File[] = []; \n  fileForm = new FormGroup({\n    file: new FormControl('')\n  })\n\n  onFileSelected(event): void {\n    this.files.push(event.target.files[0]);\n  }\n\n  onSubmit() {\n    var data: string = '';\n    var jsonData;\n    if (this.files) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        data = event.target.result as string;\n        jsonData = JSON.parse(data);\n        this.addData(jsonData);\n      }\n      \n      this.files.forEach(file => reader.readAsText(file));\n      \n    }\n    this.fileForm.reset();\n    this.files.splice(0, this.files.length);\n  }\n\n  addData(body): void {\n    const path = ''; // TODO: add path when endpoint is ready\n    // this.configService.insert(path, body).subscribe();\n    console.log(body);\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Insert data</h2>\n</div>\n\n<form [formGroup]=\"fileForm\" (ngSubmit)=\"onSubmit()\">\n    <input formControlName=\"file\" type=\"file\" accept=\".json\" id=\"file\" class=\"form-control\" (change)=\"onFileSelected($event)\">\n    <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n</form>\n\n<app-insert-module></app-insert-module>\n<app-insert-component></app-insert-component>","import { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { ConfigService } from '../config.service';\nimport { SwCompManagerComponent } from '../shared/component.model';\n\n@Component({\n  selector: 'app-comps',\n  templateUrl: './comps.component.html',\n  styleUrls: ['./comps.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class CompsComponent implements OnInit {\n  components: SwCompManagerComponent[];\n  columns: String[] = [\"name\", \"version\", \"url\", \"license\", \"copyright\"];\n  dataSource = new MatTableDataSource<SwCompManagerComponent>();\n  expandedComponent: SwCompManagerComponent | null;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<any>;\n\n  getComponents(): void {\n    this.configService.getComponents().subscribe(res => {\n      this.dataSource.data = res;\n      this.dataSource.sort = this.sort;\n      console.log(this.dataSource.data);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(private configService: ConfigService)  { }\n\n  ngOnInit(): void {\n    this.getComponents();\n  }\n}\n","<!-- Header -->\n<div class=\"row\">\n    <div class=\"col\">\n        <h1 class=\"mat-display-3\">Components</h1>\n    </div>\n</div>\n\n<!-- Filtering -->\n<mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\" />\n</mat-form-field>\n\n<!-- Component table -->\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" multiTemplateDataRows>\n    <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columns\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\n        <td mat-cell *matCellDef=\"let component\">{{component[column]}}</td>\n    </ng-container>\n\n    <!-- Expanded content -->\n    <ng-container matColumnDef=\"expandedDetail\">\n        <td mat-cell *matCellDef=\"let component\" [attr.colspan]=\"columns.length\">\n            <div class=\"component-detail\" [@detailExpand]=\"component == expandedComponent ? 'expanded' : 'collapsed'\">\n                <!-- TODO: Add expanded content here and remove router link from above-->\n            </div>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n    <tr mat-row *matRowDef=\"let component; columns: columns;\"\n        class=\"component-row\" [class.expanded-row]=\"expandedComponent === component\"\n        (click)=\"expandedComponent = expandedComponent === component ? null : component\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n</table>\n<app-insert-component></app-insert-component>","import { NgModule } from '@angular/core';\nimport { Router, RouterModule, Routes } from '@angular/router';\nimport { CompareComponent } from './compare/compare.component';\nimport { CompsComponent } from './comps/comps.component';\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\nimport { ReleasesComponent } from './releases/releases.component';\n\nconst routes: Routes = [\n  { path: 'modules/:name', component: ReleaseDetailComponent },\n  { path: 'modules', component: ReleasesComponent },\n  { path: 'components', component: CompsComponent },\n  { path: 'compare', component: CompareComponent },\n  { path: 'insert', component: DataInputComponent },\n  { path: '', redirectTo: 'modules', pathMatch: 'full' }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, retry, map, tap } from 'rxjs/operators';\n\nimport { SwCompManagerModule } from './shared/module.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private url = 'http://localhost:8081';\n\n  // Get all modules\n  getModules(): Observable<any> {\n    const url = `${this.url}/releases`;\n    return this.http.post<any>(url, null)\n      .pipe(catchError(this.handleError<String[]>('getModules', [])));\n  }\n\n  // Get full info on all modules\n  getFullModules(): Observable<any> {\n    const url = `${this.url}/moduleData`;\n    return this.http.post<any>(url, null)\n      .pipe(catchError(this.handleError<String[]>('getFullModules', [])));\n  }\n\n  // Get details of selected release\n  getRelease(name: string): Observable<any> {\n    const url = `${this.url}/releases/${name}`;\n    return this.http.post(url, null)\n      .pipe(catchError(this.handleError<any>(`getRelease id=${name}`)));\n  }\n\n  // Get comparison of two selected releases\n  getComparison(first: string, second: string): Observable<any> {\n    const url = `${this.url}/compareReleases/${first}:${second}`\n    return this.http.post(url, null)\n    .pipe(catchError(this.handleError<any>('getComparison', [])));\n  }\n\n  // Get all components\n  getComponents(): Observable<any> {\n    const url = `${this.url}/components`;\n    return this.http.post<any>(url, null)\n      .pipe(catchError(this.handleError<String[]>('getComponent', [])));\n  }\n\n  // Insert data\n  insert(path: string, body: object): Observable<any> {\n    const url = `${this.url}/${path}`;\n    return this.http.put(url, body)\n    .pipe(catchError(this.handleError<any>('insert')));\n  }\n\n\n  // Error handling\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(error); // log to console\n      console.log(`${operation} failed: ${error.message}`); // user-friendly message\n      return of(result as T); // return a safe value to keep app running\n    }\n  }\n\n  constructor(private http: HttpClient) { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}