{"version":3,"sources":["./src/app/releases/releases.component.html","./src/app/releases/releases.component.ts","./src/environments/environment.ts","./src/app/release-detail/release-detail.component.html","./src/app/release-detail/release-detail.component.ts","./src/app/compare/compare.component.html","./src/app/compare/compare.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data-input/data-input.component.ts","./src/app/data-input/data-input.component.html","./src/app/app-routing.module.ts","./src/app/config.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div>\n    <h2>Releases</h2>\n</div>\n\n<form #release=\"ngForm\" (ngSubmit)=\"onSubmit(release.value)\">\n    <div class=\"form-group mb-2\">\n        <label for=\"release\" class=\"form-label\">Release</label>\n        <select class=\"form-control\" id=\"release\" ngModel name=\"releaseId\">\n            <option *ngFor=\"let release of releases\" [ngValue]=\"release\">{{release}}</option>\n        </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success mb-2\">Valitse</button>\n</form>\n<app-release-detail [release]=\"selectedRelease\"></app-release-detail>\n","import { Component, OnInit } from '@angular/core';\nimport { Release } from '../release';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-releases',\n  templateUrl: './releases.component.html',\n  styleUrls: ['./releases.component.css']\n})\nexport class ReleasesComponent implements OnInit {\n\n  releases: String[] = [];\n\n  selectedRelease: Release;\n\n  getReleases(): void {\n    this.configService.getReleases().subscribe(releases => this.releases = releases);\n    console.log(this.releases);\n  }\n\n  onSubmit(data) {\n    console.log(\"form submitted\", data.releaseId)\n    // this.selectedRelease = this.releases[data.releaseId];\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getReleases();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"release\" class=\"row\">\n    <div class=\"col\">\n        <p>Id: {{release.id}}</p>\n        <p>Name: {{release.name}}</p>\n        <p>Components:</p>\n        <ul>\n            <li *ngFor=\"let component of release.components\">{{component}}</li>\n        </ul>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Release } from '../release'\n\n@Component({\n  selector: 'app-release-detail',\n  templateUrl: './release-detail.component.html',\n  styleUrls: ['./release-detail.component.css']\n})\nexport class ReleaseDetailComponent implements OnInit {\n\n  @Input() release: Release;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Compare releases</h2>\n\n<form #compare=\"ngForm\" (ngSubmit)=\"onSubmit(compare.value)\">\n    <div class=\"form-group mb-2\">\n        <label for=\"release1\" class=\"form-label\">Release</label>\n        <select class=\"form-control\" id=\"release1\" ngModel name=\"firstRelease\">\n            <option *ngFor=\"let release of releases\" [ngValue]=\"release.name\">{{release.name}}</option>\n        </select>\n\n        <label for=\"release2\" class=\"form-label\">Compare with</label>\n        <select class=\"form-control\" id=\"release2\" ngModel name=\"secondRelease\">\n            <option *ngFor=\"let release of releases\" [ngValue]=\"release.name\">{{release.name}}</option>\n        </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success mb-2\">Valitse</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Release } from '../release';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.css']\n})\nexport class CompareComponent implements OnInit {\n\n  releases: any;\n\n  getComparison(): void {\n    this.configService.getComparison().subscribe(releases => this.releases = releases);\n    console.log(this.releases);\n  }\n\n  onSubmit(data) {\n    console.log(data.firstRelease, data.secondRelease)\n  }\n\n  constructor(private configService: ConfigService) { }\n\n  ngOnInit(): void {\n    this.getComparison();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Software Component Manager';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h1>{{title}}</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <ul class=\"nav\">\n      <li class=\"nav-item\">\n        <a routerLink=\"/releases\" class=\"nav-link active\">Releases</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/compare\" class=\"nav-link\">Compare</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/insert\" class=\"nav-link\">Insert</a>\n      </li>\n    </ul>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ReleasesComponent } from './releases/releases.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReleaseDetailComponent } from './release-detail/release-detail.component';\n\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { CompareComponent } from './compare/compare.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReleasesComponent,\n    ReleaseDetailComponent,\n    DataInputComponent,\n    CompareComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-input',\n  templateUrl: './data-input.component.html',\n  styleUrls: ['./data-input.component.css']\n})\nexport class DataInputComponent implements OnInit {\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h2>Insert data</h2>\n</div>\n\n<form>\n    <div class=\"form-group mb-2\">\n        <label for=\"insert\" class=\"form-label\">File</label>\n        <input type=\"file\" class=\"form-control\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success mb-2\">Insert</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Router, RouterModule, Routes } from '@angular/router';\nimport { CompareComponent } from './compare/compare.component';\nimport { DataInputComponent } from './data-input/data-input.component';\nimport { ReleasesComponent } from './releases/releases.component';\n\nconst routes: Routes = [\n  { path: 'releases', component: ReleasesComponent },\n  { path: 'compare', component: CompareComponent },\n  { path: 'insert', component: DataInputComponent },\n  { path: '', redirectTo: 'releases', pathMatch: 'full'}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, retry, map, tap } from 'rxjs/operators';\n\nimport { Release } from './release';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private releasesUrl = 'http://scala/release';\n  private comparisonUrl = 'http://scala/comparison'\n\n  getReleases(): Observable<String[]> {\n    return this.http.get<String[]>(this.releasesUrl)\n      .pipe(catchError(this.handleError<String[]>('getReleases', [])));\n  }\n\n  getComparison(): Observable<any[]> {\n    return this.http.get<any[]>(this.comparisonUrl)\n    .pipe(catchError(this.handleError<any>('getComparison', [])));\n  }\n\n  // Error handling\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(error); // log to console\n      console.log(`${operation} failed: ${error.message}`); // user-friendly message\n      return of(result as T); // return a dafe value to keep app running\n    }\n  }\n\n  constructor(private http: HttpClient) { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}